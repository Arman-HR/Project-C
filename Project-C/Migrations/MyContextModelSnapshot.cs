// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorServerEFCoreTest.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.Actions", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("Model.Actions_In_OGSM", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Action_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OGSM_Id")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("Action_Id");

                    b.HasIndex("OGSM_Id");

                    b.ToTable("Actions_In_OGSM");
                });

            modelBuilder.Entity("Model.Goals", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("Model.Goals_In_OGSM", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Goal_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OGSM_Id")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("Goal_Id");

                    b.HasIndex("OGSM_Id");

                    b.ToTable("Goals_In_OGSM");
                });

            modelBuilder.Entity("Model.Manager_and_User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Manager_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("Manager_Id");

                    b.ToTable("Manager_and_User");
                });

            modelBuilder.Entity("Model.OGSM", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ambition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("OGSM");
                });

            modelBuilder.Entity("Model.OGSMs_Per_User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OGSM_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("OGSM_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("OGSMs_Per_User");
                });

            modelBuilder.Entity("Model.Strategies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("Model.Strategies_In_OGSM", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OGSM_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Strategie_Id")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("OGSM_Id");

                    b.HasIndex("Strategie_Id");

                    b.ToTable("Strategies_In_OGSM");
                });

            modelBuilder.Entity("Model.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("User_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Actions_In_OGSM", b =>
                {
                    b.HasOne("Model.Actions", "Action")
                        .WithMany("Actions_In_OGSM")
                        .HasForeignKey("Action_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.OGSM", "OGSM")
                        .WithMany("Actions_In_OGSM")
                        .HasForeignKey("OGSM_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("OGSM");
                });

            modelBuilder.Entity("Model.Goals_In_OGSM", b =>
                {
                    b.HasOne("Model.Goals", "Goal")
                        .WithMany("Goals_In_OGSM")
                        .HasForeignKey("Goal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.OGSM", "OGSM")
                        .WithMany("Goals_In_OGSM")
                        .HasForeignKey("OGSM_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");

                    b.Navigation("OGSM");
                });

            modelBuilder.Entity("Model.Manager_and_User", b =>
                {
                    b.HasOne("Model.Users", "Users")
                        .WithMany("Manager_and_User")
                        .HasForeignKey("Manager_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Model.OGSMs_Per_User", b =>
                {
                    b.HasOne("Model.OGSM", "OGSM")
                        .WithMany("OGSMs_Per_User")
                        .HasForeignKey("OGSM_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Users", "Users")
                        .WithMany("OGSMs_Per_User")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OGSM");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Model.Strategies_In_OGSM", b =>
                {
                    b.HasOne("Model.OGSM", "OGSM")
                        .WithMany("Strategies_In_OGSM")
                        .HasForeignKey("OGSM_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Strategies", "Strategie")
                        .WithMany("Strategies_In_OGSM")
                        .HasForeignKey("Strategie_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OGSM");

                    b.Navigation("Strategie");
                });

            modelBuilder.Entity("Model.Actions", b =>
                {
                    b.Navigation("Actions_In_OGSM");
                });

            modelBuilder.Entity("Model.Goals", b =>
                {
                    b.Navigation("Goals_In_OGSM");
                });

            modelBuilder.Entity("Model.OGSM", b =>
                {
                    b.Navigation("Actions_In_OGSM");

                    b.Navigation("Goals_In_OGSM");

                    b.Navigation("OGSMs_Per_User");

                    b.Navigation("Strategies_In_OGSM");
                });

            modelBuilder.Entity("Model.Strategies", b =>
                {
                    b.Navigation("Strategies_In_OGSM");
                });

            modelBuilder.Entity("Model.Users", b =>
                {
                    b.Navigation("Manager_and_User");

                    b.Navigation("OGSMs_Per_User");
                });
#pragma warning restore 612, 618
        }
    }
}
